@page "/detalleLibro/{id}"
@inject HttpClient Http

<div class="jumbotron">
    <h1>Información del libro</h1>    
    <p>seleccionado</p>
</div>




<a href="libros" class="btn btn-danger">Regresar</a>

<br />
<br />

@if (informacionLibro == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    string url = string.Format(@"/img/libro{0}.jpg", id);
    <div class="container">
        <div class="row jumbotron">
            <div class="col col-md-9">
                <h2>@informacionLibro[0].Titulo</h2>
                <p><b>Número de páginas:</b> @informacionLibro[0].Paginas</p>
                <p><b>Autor:</b> @informacionLibro[0].Autor</p>
                <p><b>Editorial:</b> @informacionLibro[0].Editorial</p>
                <p><b>Año de publicación:</b> @informacionLibro[0].Anio</p>
                <p><b>Reseña:</b> @informacionLibro[0].Resenia</p>

            </div>
            <div class="col col-md-3">
                <img src="@url" height="350" width="250" />
            </div>
        </div>
</div>
    
    

}

@code {
    [Parameter]

    public string id { get; set; }

    private BooksForecast[] informacionLibro;



    protected override async Task OnInitializedAsync()
    {
        informacionLibro = await Http.GetFromJsonAsync<BooksForecast[]>("sample-data/libro" + id + ".json");

    }


    public class BooksForecast
    {
        public string Titulo { get; set; }

        public string Autor { get; set; }

        public string Anio { get; set; }

        public int Id { get; set; }

        public string Editorial { get; set; }

        public int Paginas { get; set; }

        public string Resenia { get; set; }

    }



}
